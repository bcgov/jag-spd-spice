// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Gov.Jag.Spice.Interfaces.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Microsoft.Dynamics.CRM.salesorder
    /// </summary>
    public partial class MicrosoftDynamicsCRMsalesorder
    {
        /// <summary>
        /// Initializes a new instance of the MicrosoftDynamicsCRMsalesorder
        /// class.
        /// </summary>
        public MicrosoftDynamicsCRMsalesorder()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MicrosoftDynamicsCRMsalesorder
        /// class.
        /// </summary>
        public MicrosoftDynamicsCRMsalesorder(string _owninguserValue = default(string), byte[] entityimage = default(byte[]), string ordernumber = default(string), System.DateTimeOffset? datefulfilled = default(System.DateTimeOffset?), int? skippricecalculation = default(int?), decimal? discountamount = default(decimal?), string billtoLine2 = default(string), decimal? totalamountBase = default(decimal?), string _owningbusinessunitValue = default(string), string _quoteidValue = default(string), decimal? freightamount = default(decimal?), string processid = default(string), string billtoName = default(string), decimal? discountpercentage = default(decimal?), string billtoLine1 = default(string), int? statuscode = default(int?), string name = default(string), string billtoTelephone = default(string), decimal? freightamountBase = default(decimal?), System.DateTimeOffset? modifiedon = default(System.DateTimeOffset?), string _createdbyValue = default(string), decimal? totaltax = default(decimal?), decimal? totaldiscountamountBase = default(decimal?), int? freighttermscode = default(int?), int? statecode = default(int?), string billtoContactname = default(string), System.DateTimeOffset? lastonholdtime = default(System.DateTimeOffset?), bool? ispricelocked = default(bool?), string entityimageid = default(string), string billtoStateorprovince = default(string), string _campaignidValue = default(string), string shiptoStateorprovince = default(string), int? importsequencenumber = default(int?), decimal? totalamount = default(decimal?), int? onholdtime = default(int?), System.DateTimeOffset? createdon = default(System.DateTimeOffset?), string shiptoFax = default(string), string billtoCity = default(string), decimal? discountamountBase = default(decimal?), System.DateTimeOffset? lastbackofficesubmit = default(System.DateTimeOffset?), string shiptoAddressid = default(string), string billtoLine3 = default(string), int? pricingerrorcode = default(int?), decimal? totallineitemdiscountamountBase = default(decimal?), string _customeridValue = default(string), string billtoPostalcode = default(string), System.DateTimeOffset? submitdate = default(System.DateTimeOffset?), string _owneridValue = default(string), string shiptoCountry = default(string), int? utcconversiontimezonecode = default(int?), string shiptoTelephone = default(string), string traversedpath = default(string), string salesorderid = default(string), string shiptoLine3 = default(string), string billtoAddressid = default(string), decimal? totaltaxBase = default(decimal?), int? shippingmethodcode = default(int?), int? prioritycode = default(int?), int? paymenttermscode = default(int?), string _modifiedbyValue = default(string), string _owningteamValue = default(string), string _contactidValue = default(string), string shiptoLine1 = default(string), string _opportunityidValue = default(string), string stageid = default(string), string _slainvokedidValue = default(string), string billtoFax = default(string), string versionnumber = default(string), string _accountidValue = default(string), string submitstatusdescription = default(string), decimal? totalamountlessfreightBase = default(decimal?), string description = default(string), string _pricelevelidValue = default(string), string _modifiedonbehalfbyValue = default(string), decimal? totallineitemamountBase = default(decimal?), System.DateTimeOffset? requestdeliveryby = default(System.DateTimeOffset?), decimal? totalamountlessfreight = default(decimal?), string shiptoName = default(string), string shiptoPostalcode = default(string), string billtoComposite = default(string), decimal? totaldiscountamount = default(decimal?), string shiptoComposite = default(string), decimal? totallineitemamount = default(decimal?), string entityimageUrl = default(string), string emailaddress = default(string), long? entityimageTimestamp = default(long?), string shiptoCity = default(string), string _transactioncurrencyidValue = default(string), int? timezoneruleversionnumber = default(int?), string _createdonbehalfbyValue = default(string), System.DateTimeOffset? overriddencreatedon = default(System.DateTimeOffset?), string _slaidValue = default(string), bool? willcall = default(bool?), int? shiptoFreighttermscode = default(int?), string shiptoLine2 = default(string), string shiptoContactname = default(string), decimal? totallineitemdiscountamount = default(decimal?), decimal? exchangerate = default(decimal?), int? submitstatus = default(int?), string billtoCountry = default(string), MicrosoftDynamicsCRMsystemuser createdby = default(MicrosoftDynamicsCRMsystemuser), MicrosoftDynamicsCRMsystemuser createdonbehalfby = default(MicrosoftDynamicsCRMsystemuser), MicrosoftDynamicsCRMsystemuser modifiedby = default(MicrosoftDynamicsCRMsystemuser), MicrosoftDynamicsCRMsystemuser modifiedonbehalfby = default(MicrosoftDynamicsCRMsystemuser), MicrosoftDynamicsCRMsystemuser owninguser = default(MicrosoftDynamicsCRMsystemuser), MicrosoftDynamicsCRMteam owningteam = default(MicrosoftDynamicsCRMteam), MicrosoftDynamicsCRMprincipal ownerid = default(MicrosoftDynamicsCRMprincipal), MicrosoftDynamicsCRMbusinessunit owningbusinessunit = default(MicrosoftDynamicsCRMbusinessunit), IList<MicrosoftDynamicsCRMactivitypointer> salesOrderActivityPointers = default(IList<MicrosoftDynamicsCRMactivitypointer>), IList<MicrosoftDynamicsCRMsyncerror> salesOrderSyncErrors = default(IList<MicrosoftDynamicsCRMsyncerror>), IList<MicrosoftDynamicsCRMactivityparty> salesorderActivityParties = default(IList<MicrosoftDynamicsCRMactivityparty>), IList<MicrosoftDynamicsCRMasyncoperation> salesOrderAsyncOperations = default(IList<MicrosoftDynamicsCRMasyncoperation>), IList<MicrosoftDynamicsCRMmailboxtrackingfolder> salesOrderMailboxTrackingFolder = default(IList<MicrosoftDynamicsCRMmailboxtrackingfolder>), IList<MicrosoftDynamicsCRMprocesssession> salesOrderProcessSessions = default(IList<MicrosoftDynamicsCRMprocesssession>), IList<MicrosoftDynamicsCRMbulkdeletefailure> salesOrderBulkDeleteFailures = default(IList<MicrosoftDynamicsCRMbulkdeletefailure>), IList<MicrosoftDynamicsCRMprincipalobjectattributeaccess> salesorderPrincipalobjectattributeaccess = default(IList<MicrosoftDynamicsCRMprincipalobjectattributeaccess>), MicrosoftDynamicsCRMprocessstage stageidProcessstage = default(MicrosoftDynamicsCRMprocessstage), MicrosoftDynamicsCRMtransactioncurrency transactioncurrencyid = default(MicrosoftDynamicsCRMtransactioncurrency), IList<MicrosoftDynamicsCRMappointment> salesOrderAppointments = default(IList<MicrosoftDynamicsCRMappointment>), IList<MicrosoftDynamicsCRMemail> salesOrderEmails = default(IList<MicrosoftDynamicsCRMemail>), IList<MicrosoftDynamicsCRMfax> salesOrderFaxes = default(IList<MicrosoftDynamicsCRMfax>), IList<MicrosoftDynamicsCRMletter> salesOrderLetters = default(IList<MicrosoftDynamicsCRMletter>), IList<MicrosoftDynamicsCRMphonecall> salesOrderPhonecalls = default(IList<MicrosoftDynamicsCRMphonecall>), IList<MicrosoftDynamicsCRMtask> salesOrderTasks = default(IList<MicrosoftDynamicsCRMtask>), IList<MicrosoftDynamicsCRMrecurringappointmentmaster> salesOrderRecurringAppointmentMasters = default(IList<MicrosoftDynamicsCRMrecurringappointmentmaster>), IList<MicrosoftDynamicsCRMsocialactivity> salesOrderSocialActivities = default(IList<MicrosoftDynamicsCRMsocialactivity>), IList<MicrosoftDynamicsCRMconnection> salesorderConnections1 = default(IList<MicrosoftDynamicsCRMconnection>), IList<MicrosoftDynamicsCRMconnection> salesorderConnections2 = default(IList<MicrosoftDynamicsCRMconnection>), IList<MicrosoftDynamicsCRMannotation> salesOrderAnnotation = default(IList<MicrosoftDynamicsCRMannotation>), IList<MicrosoftDynamicsCRMserviceappointment> salesOrderServiceAppointments = default(IList<MicrosoftDynamicsCRMserviceappointment>), MicrosoftDynamicsCRMaccount customeridAccount = default(MicrosoftDynamicsCRMaccount), IList<MicrosoftDynamicsCRMcontact> contactordersAssociation = default(IList<MicrosoftDynamicsCRMcontact>), MicrosoftDynamicsCRMcontact customeridContact = default(MicrosoftDynamicsCRMcontact), MicrosoftDynamicsCRMopportunity opportunityid = default(MicrosoftDynamicsCRMopportunity), IList<MicrosoftDynamicsCRMopportunitysalesprocess> salesorderOpportunitysalesprocess = default(IList<MicrosoftDynamicsCRMopportunitysalesprocess>), MicrosoftDynamicsCRMpricelevel pricelevelid = default(MicrosoftDynamicsCRMpricelevel), MicrosoftDynamicsCRMquote quoteid = default(MicrosoftDynamicsCRMquote), IList<MicrosoftDynamicsCRMsalesorderdetail> orderDetails = default(IList<MicrosoftDynamicsCRMsalesorderdetail>), IList<MicrosoftDynamicsCRMinvoice> orderInvoices = default(IList<MicrosoftDynamicsCRMinvoice>), IList<MicrosoftDynamicsCRMorderclose> salesOrderOrderClose = default(IList<MicrosoftDynamicsCRMorderclose>), IList<MicrosoftDynamicsCRMslakpiinstance> slakpiinstanceSalesorder = default(IList<MicrosoftDynamicsCRMslakpiinstance>), MicrosoftDynamicsCRMsla slaSalesorderSla = default(MicrosoftDynamicsCRMsla), MicrosoftDynamicsCRMsla slainvokedidSalesorderSla = default(MicrosoftDynamicsCRMsla), MicrosoftDynamicsCRMcampaign campaignid = default(MicrosoftDynamicsCRMcampaign), IList<MicrosoftDynamicsCRMspiceRequiredchecks> salesorderSpiceRequiredcheckses = default(IList<MicrosoftDynamicsCRMspiceRequiredchecks>))
        {
            this._owninguserValue = _owninguserValue;
            Entityimage = entityimage;
            Ordernumber = ordernumber;
            Datefulfilled = datefulfilled;
            Skippricecalculation = skippricecalculation;
            Discountamount = discountamount;
            BilltoLine2 = billtoLine2;
            TotalamountBase = totalamountBase;
            this._owningbusinessunitValue = _owningbusinessunitValue;
            this._quoteidValue = _quoteidValue;
            Freightamount = freightamount;
            Processid = processid;
            BilltoName = billtoName;
            Discountpercentage = discountpercentage;
            BilltoLine1 = billtoLine1;
            Statuscode = statuscode;
            Name = name;
            BilltoTelephone = billtoTelephone;
            FreightamountBase = freightamountBase;
            Modifiedon = modifiedon;
            this._createdbyValue = _createdbyValue;
            Totaltax = totaltax;
            TotaldiscountamountBase = totaldiscountamountBase;
            Freighttermscode = freighttermscode;
            Statecode = statecode;
            BilltoContactname = billtoContactname;
            Lastonholdtime = lastonholdtime;
            Ispricelocked = ispricelocked;
            Entityimageid = entityimageid;
            BilltoStateorprovince = billtoStateorprovince;
            this._campaignidValue = _campaignidValue;
            ShiptoStateorprovince = shiptoStateorprovince;
            Importsequencenumber = importsequencenumber;
            Totalamount = totalamount;
            Onholdtime = onholdtime;
            Createdon = createdon;
            ShiptoFax = shiptoFax;
            BilltoCity = billtoCity;
            DiscountamountBase = discountamountBase;
            Lastbackofficesubmit = lastbackofficesubmit;
            ShiptoAddressid = shiptoAddressid;
            BilltoLine3 = billtoLine3;
            Pricingerrorcode = pricingerrorcode;
            TotallineitemdiscountamountBase = totallineitemdiscountamountBase;
            this._customeridValue = _customeridValue;
            BilltoPostalcode = billtoPostalcode;
            Submitdate = submitdate;
            this._owneridValue = _owneridValue;
            ShiptoCountry = shiptoCountry;
            Utcconversiontimezonecode = utcconversiontimezonecode;
            ShiptoTelephone = shiptoTelephone;
            Traversedpath = traversedpath;
            Salesorderid = salesorderid;
            ShiptoLine3 = shiptoLine3;
            BilltoAddressid = billtoAddressid;
            TotaltaxBase = totaltaxBase;
            Shippingmethodcode = shippingmethodcode;
            Prioritycode = prioritycode;
            Paymenttermscode = paymenttermscode;
            this._modifiedbyValue = _modifiedbyValue;
            this._owningteamValue = _owningteamValue;
            this._contactidValue = _contactidValue;
            ShiptoLine1 = shiptoLine1;
            this._opportunityidValue = _opportunityidValue;
            Stageid = stageid;
            this._slainvokedidValue = _slainvokedidValue;
            BilltoFax = billtoFax;
            Versionnumber = versionnumber;
            this._accountidValue = _accountidValue;
            Submitstatusdescription = submitstatusdescription;
            TotalamountlessfreightBase = totalamountlessfreightBase;
            Description = description;
            this._pricelevelidValue = _pricelevelidValue;
            this._modifiedonbehalfbyValue = _modifiedonbehalfbyValue;
            TotallineitemamountBase = totallineitemamountBase;
            Requestdeliveryby = requestdeliveryby;
            Totalamountlessfreight = totalamountlessfreight;
            ShiptoName = shiptoName;
            ShiptoPostalcode = shiptoPostalcode;
            BilltoComposite = billtoComposite;
            Totaldiscountamount = totaldiscountamount;
            ShiptoComposite = shiptoComposite;
            Totallineitemamount = totallineitemamount;
            EntityimageUrl = entityimageUrl;
            Emailaddress = emailaddress;
            EntityimageTimestamp = entityimageTimestamp;
            ShiptoCity = shiptoCity;
            this._transactioncurrencyidValue = _transactioncurrencyidValue;
            Timezoneruleversionnumber = timezoneruleversionnumber;
            this._createdonbehalfbyValue = _createdonbehalfbyValue;
            Overriddencreatedon = overriddencreatedon;
            this._slaidValue = _slaidValue;
            Willcall = willcall;
            ShiptoFreighttermscode = shiptoFreighttermscode;
            ShiptoLine2 = shiptoLine2;
            ShiptoContactname = shiptoContactname;
            Totallineitemdiscountamount = totallineitemdiscountamount;
            Exchangerate = exchangerate;
            Submitstatus = submitstatus;
            BilltoCountry = billtoCountry;
            Createdby = createdby;
            Createdonbehalfby = createdonbehalfby;
            Modifiedby = modifiedby;
            Modifiedonbehalfby = modifiedonbehalfby;
            Owninguser = owninguser;
            Owningteam = owningteam;
            Ownerid = ownerid;
            Owningbusinessunit = owningbusinessunit;
            SalesOrderActivityPointers = salesOrderActivityPointers;
            SalesOrderSyncErrors = salesOrderSyncErrors;
            SalesorderActivityParties = salesorderActivityParties;
            SalesOrderAsyncOperations = salesOrderAsyncOperations;
            SalesOrderMailboxTrackingFolder = salesOrderMailboxTrackingFolder;
            SalesOrderProcessSessions = salesOrderProcessSessions;
            SalesOrderBulkDeleteFailures = salesOrderBulkDeleteFailures;
            SalesorderPrincipalobjectattributeaccess = salesorderPrincipalobjectattributeaccess;
            StageidProcessstage = stageidProcessstage;
            Transactioncurrencyid = transactioncurrencyid;
            SalesOrderAppointments = salesOrderAppointments;
            SalesOrderEmails = salesOrderEmails;
            SalesOrderFaxes = salesOrderFaxes;
            SalesOrderLetters = salesOrderLetters;
            SalesOrderPhonecalls = salesOrderPhonecalls;
            SalesOrderTasks = salesOrderTasks;
            SalesOrderRecurringAppointmentMasters = salesOrderRecurringAppointmentMasters;
            SalesOrderSocialActivities = salesOrderSocialActivities;
            SalesorderConnections1 = salesorderConnections1;
            SalesorderConnections2 = salesorderConnections2;
            SalesOrderAnnotation = salesOrderAnnotation;
            SalesOrderServiceAppointments = salesOrderServiceAppointments;
            CustomeridAccount = customeridAccount;
            ContactordersAssociation = contactordersAssociation;
            CustomeridContact = customeridContact;
            Opportunityid = opportunityid;
            SalesorderOpportunitysalesprocess = salesorderOpportunitysalesprocess;
            Pricelevelid = pricelevelid;
            Quoteid = quoteid;
            OrderDetails = orderDetails;
            OrderInvoices = orderInvoices;
            SalesOrderOrderClose = salesOrderOrderClose;
            SlakpiinstanceSalesorder = slakpiinstanceSalesorder;
            SlaSalesorderSla = slaSalesorderSla;
            SlainvokedidSalesorderSla = slainvokedidSalesorderSla;
            Campaignid = campaignid;
            SalesorderSpiceRequiredcheckses = salesorderSpiceRequiredcheckses;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_owninguser_value")]
        public string _owninguserValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonConverter(typeof(Base64UrlJsonConverter))]
        [JsonProperty(PropertyName = "entityimage")]
        public byte[] Entityimage { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ordernumber")]
        public string Ordernumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "datefulfilled")]
        public System.DateTimeOffset? Datefulfilled { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "skippricecalculation")]
        public int? Skippricecalculation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "discountamount")]
        public decimal? Discountamount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "billto_line2")]
        public string BilltoLine2 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "totalamount_base")]
        public decimal? TotalamountBase { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_owningbusinessunit_value")]
        public string _owningbusinessunitValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_quoteid_value")]
        public string _quoteidValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "freightamount")]
        public decimal? Freightamount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "processid")]
        public string Processid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "billto_name")]
        public string BilltoName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "discountpercentage")]
        public decimal? Discountpercentage { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "billto_line1")]
        public string BilltoLine1 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "statuscode")]
        public int? Statuscode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "billto_telephone")]
        public string BilltoTelephone { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "freightamount_base")]
        public decimal? FreightamountBase { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "modifiedon")]
        public System.DateTimeOffset? Modifiedon { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_createdby_value")]
        public string _createdbyValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "totaltax")]
        public decimal? Totaltax { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "totaldiscountamount_base")]
        public decimal? TotaldiscountamountBase { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "freighttermscode")]
        public int? Freighttermscode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "statecode")]
        public int? Statecode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "billto_contactname")]
        public string BilltoContactname { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lastonholdtime")]
        public System.DateTimeOffset? Lastonholdtime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ispricelocked")]
        public bool? Ispricelocked { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "entityimageid")]
        public string Entityimageid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "billto_stateorprovince")]
        public string BilltoStateorprovince { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_campaignid_value")]
        public string _campaignidValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "shipto_stateorprovince")]
        public string ShiptoStateorprovince { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "importsequencenumber")]
        public int? Importsequencenumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "totalamount")]
        public decimal? Totalamount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "onholdtime")]
        public int? Onholdtime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "createdon")]
        public System.DateTimeOffset? Createdon { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "shipto_fax")]
        public string ShiptoFax { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "billto_city")]
        public string BilltoCity { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "discountamount_base")]
        public decimal? DiscountamountBase { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lastbackofficesubmit")]
        public System.DateTimeOffset? Lastbackofficesubmit { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "shipto_addressid")]
        public string ShiptoAddressid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "billto_line3")]
        public string BilltoLine3 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "pricingerrorcode")]
        public int? Pricingerrorcode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "totallineitemdiscountamount_base")]
        public decimal? TotallineitemdiscountamountBase { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_customerid_value")]
        public string _customeridValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "billto_postalcode")]
        public string BilltoPostalcode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "submitdate")]
        public System.DateTimeOffset? Submitdate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_ownerid_value")]
        public string _owneridValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "shipto_country")]
        public string ShiptoCountry { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "utcconversiontimezonecode")]
        public int? Utcconversiontimezonecode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "shipto_telephone")]
        public string ShiptoTelephone { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "traversedpath")]
        public string Traversedpath { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "salesorderid")]
        public string Salesorderid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "shipto_line3")]
        public string ShiptoLine3 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "billto_addressid")]
        public string BilltoAddressid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "totaltax_base")]
        public decimal? TotaltaxBase { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "shippingmethodcode")]
        public int? Shippingmethodcode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "prioritycode")]
        public int? Prioritycode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "paymenttermscode")]
        public int? Paymenttermscode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_modifiedby_value")]
        public string _modifiedbyValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_owningteam_value")]
        public string _owningteamValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_contactid_value")]
        public string _contactidValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "shipto_line1")]
        public string ShiptoLine1 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_opportunityid_value")]
        public string _opportunityidValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "stageid")]
        public string Stageid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_slainvokedid_value")]
        public string _slainvokedidValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "billto_fax")]
        public string BilltoFax { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "versionnumber")]
        public string Versionnumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_accountid_value")]
        public string _accountidValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "submitstatusdescription")]
        public string Submitstatusdescription { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "totalamountlessfreight_base")]
        public decimal? TotalamountlessfreightBase { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_pricelevelid_value")]
        public string _pricelevelidValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_modifiedonbehalfby_value")]
        public string _modifiedonbehalfbyValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "totallineitemamount_base")]
        public decimal? TotallineitemamountBase { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "requestdeliveryby")]
        public System.DateTimeOffset? Requestdeliveryby { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "totalamountlessfreight")]
        public decimal? Totalamountlessfreight { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "shipto_name")]
        public string ShiptoName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "shipto_postalcode")]
        public string ShiptoPostalcode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "billto_composite")]
        public string BilltoComposite { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "totaldiscountamount")]
        public decimal? Totaldiscountamount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "shipto_composite")]
        public string ShiptoComposite { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "totallineitemamount")]
        public decimal? Totallineitemamount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "entityimage_url")]
        public string EntityimageUrl { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "emailaddress")]
        public string Emailaddress { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "entityimage_timestamp")]
        public long? EntityimageTimestamp { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "shipto_city")]
        public string ShiptoCity { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_transactioncurrencyid_value")]
        public string _transactioncurrencyidValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "timezoneruleversionnumber")]
        public int? Timezoneruleversionnumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_createdonbehalfby_value")]
        public string _createdonbehalfbyValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "overriddencreatedon")]
        public System.DateTimeOffset? Overriddencreatedon { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_slaid_value")]
        public string _slaidValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "willcall")]
        public bool? Willcall { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "shipto_freighttermscode")]
        public int? ShiptoFreighttermscode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "shipto_line2")]
        public string ShiptoLine2 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "shipto_contactname")]
        public string ShiptoContactname { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "totallineitemdiscountamount")]
        public decimal? Totallineitemdiscountamount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "exchangerate")]
        public decimal? Exchangerate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "submitstatus")]
        public int? Submitstatus { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "billto_country")]
        public string BilltoCountry { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "createdby")]
        public MicrosoftDynamicsCRMsystemuser Createdby { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "createdonbehalfby")]
        public MicrosoftDynamicsCRMsystemuser Createdonbehalfby { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "modifiedby")]
        public MicrosoftDynamicsCRMsystemuser Modifiedby { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "modifiedonbehalfby")]
        public MicrosoftDynamicsCRMsystemuser Modifiedonbehalfby { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "owninguser")]
        public MicrosoftDynamicsCRMsystemuser Owninguser { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "owningteam")]
        public MicrosoftDynamicsCRMteam Owningteam { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ownerid")]
        public MicrosoftDynamicsCRMprincipal Ownerid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "owningbusinessunit")]
        public MicrosoftDynamicsCRMbusinessunit Owningbusinessunit { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SalesOrder_ActivityPointers")]
        public IList<MicrosoftDynamicsCRMactivitypointer> SalesOrderActivityPointers { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SalesOrder_SyncErrors")]
        public IList<MicrosoftDynamicsCRMsyncerror> SalesOrderSyncErrors { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "salesorder_activity_parties")]
        public IList<MicrosoftDynamicsCRMactivityparty> SalesorderActivityParties { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SalesOrder_AsyncOperations")]
        public IList<MicrosoftDynamicsCRMasyncoperation> SalesOrderAsyncOperations { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SalesOrder_MailboxTrackingFolder")]
        public IList<MicrosoftDynamicsCRMmailboxtrackingfolder> SalesOrderMailboxTrackingFolder { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SalesOrder_ProcessSessions")]
        public IList<MicrosoftDynamicsCRMprocesssession> SalesOrderProcessSessions { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SalesOrder_BulkDeleteFailures")]
        public IList<MicrosoftDynamicsCRMbulkdeletefailure> SalesOrderBulkDeleteFailures { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "salesorder_principalobjectattributeaccess")]
        public IList<MicrosoftDynamicsCRMprincipalobjectattributeaccess> SalesorderPrincipalobjectattributeaccess { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "stageid_processstage")]
        public MicrosoftDynamicsCRMprocessstage StageidProcessstage { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "transactioncurrencyid")]
        public MicrosoftDynamicsCRMtransactioncurrency Transactioncurrencyid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SalesOrder_Appointments")]
        public IList<MicrosoftDynamicsCRMappointment> SalesOrderAppointments { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SalesOrder_Emails")]
        public IList<MicrosoftDynamicsCRMemail> SalesOrderEmails { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SalesOrder_Faxes")]
        public IList<MicrosoftDynamicsCRMfax> SalesOrderFaxes { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SalesOrder_Letters")]
        public IList<MicrosoftDynamicsCRMletter> SalesOrderLetters { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SalesOrder_Phonecalls")]
        public IList<MicrosoftDynamicsCRMphonecall> SalesOrderPhonecalls { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SalesOrder_Tasks")]
        public IList<MicrosoftDynamicsCRMtask> SalesOrderTasks { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SalesOrder_RecurringAppointmentMasters")]
        public IList<MicrosoftDynamicsCRMrecurringappointmentmaster> SalesOrderRecurringAppointmentMasters { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SalesOrder_SocialActivities")]
        public IList<MicrosoftDynamicsCRMsocialactivity> SalesOrderSocialActivities { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "salesorder_connections1")]
        public IList<MicrosoftDynamicsCRMconnection> SalesorderConnections1 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "salesorder_connections2")]
        public IList<MicrosoftDynamicsCRMconnection> SalesorderConnections2 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SalesOrder_Annotation")]
        public IList<MicrosoftDynamicsCRMannotation> SalesOrderAnnotation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SalesOrder_ServiceAppointments")]
        public IList<MicrosoftDynamicsCRMserviceappointment> SalesOrderServiceAppointments { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "customerid_account")]
        public MicrosoftDynamicsCRMaccount CustomeridAccount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "contactorders_association")]
        public IList<MicrosoftDynamicsCRMcontact> ContactordersAssociation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "customerid_contact")]
        public MicrosoftDynamicsCRMcontact CustomeridContact { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "opportunityid")]
        public MicrosoftDynamicsCRMopportunity Opportunityid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "salesorder_opportunitysalesprocess")]
        public IList<MicrosoftDynamicsCRMopportunitysalesprocess> SalesorderOpportunitysalesprocess { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "pricelevelid")]
        public MicrosoftDynamicsCRMpricelevel Pricelevelid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "quoteid")]
        public MicrosoftDynamicsCRMquote Quoteid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "order_details")]
        public IList<MicrosoftDynamicsCRMsalesorderdetail> OrderDetails { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "order_invoices")]
        public IList<MicrosoftDynamicsCRMinvoice> OrderInvoices { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SalesOrder_OrderClose")]
        public IList<MicrosoftDynamicsCRMorderclose> SalesOrderOrderClose { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "slakpiinstance_salesorder")]
        public IList<MicrosoftDynamicsCRMslakpiinstance> SlakpiinstanceSalesorder { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sla_salesorder_sla")]
        public MicrosoftDynamicsCRMsla SlaSalesorderSla { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "slainvokedid_salesorder_sla")]
        public MicrosoftDynamicsCRMsla SlainvokedidSalesorderSla { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "campaignid")]
        public MicrosoftDynamicsCRMcampaign Campaignid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "salesorder_spice_requiredcheckses")]
        public IList<MicrosoftDynamicsCRMspiceRequiredchecks> SalesorderSpiceRequiredcheckses { get; set; }

    }
}
