// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Gov.Jag.Spice.Interfaces.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// DependentAttributeMetadata
    /// </summary>
    public partial class MicrosoftDynamicsCRMDependentAttributeMetadata
    {
        /// <summary>
        /// Initializes a new instance of the
        /// MicrosoftDynamicsCRMDependentAttributeMetadata class.
        /// </summary>
        public MicrosoftDynamicsCRMDependentAttributeMetadata()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// MicrosoftDynamicsCRMDependentAttributeMetadata class.
        /// </summary>
        public MicrosoftDynamicsCRMDependentAttributeMetadata(string attributeId = default(string), string logicalName = default(string), string displayName = default(string), string attributeType = default(string), string attributeFormatType = default(string), string entityName = default(string), bool? isCustomAttribute = default(bool?), bool? isValidForAdvancedFind = default(bool?), bool? isValidForGrid = default(bool?), string yomiOf = default(string), string attributeOf = default(string), MicrosoftDynamicsCRMDependentOptionSetMetadata optionSet = default(MicrosoftDynamicsCRMDependentOptionSetMetadata), IList<string> targets = default(IList<string>), bool? isRangeBased = default(bool?), double? minValue = default(double?), double? maxValue = default(double?), int? precision = default(int?))
        {
            AttributeId = attributeId;
            LogicalName = logicalName;
            DisplayName = displayName;
            AttributeType = attributeType;
            AttributeFormatType = attributeFormatType;
            EntityName = entityName;
            IsCustomAttribute = isCustomAttribute;
            IsValidForAdvancedFind = isValidForAdvancedFind;
            IsValidForGrid = isValidForGrid;
            YomiOf = yomiOf;
            AttributeOf = attributeOf;
            OptionSet = optionSet;
            Targets = targets;
            IsRangeBased = isRangeBased;
            MinValue = minValue;
            MaxValue = maxValue;
            Precision = precision;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AttributeId")]
        public string AttributeId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LogicalName")]
        public string LogicalName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DisplayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AttributeType")]
        public string AttributeType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AttributeFormatType")]
        public string AttributeFormatType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "EntityName")]
        public string EntityName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsCustomAttribute")]
        public bool? IsCustomAttribute { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsValidForAdvancedFind")]
        public bool? IsValidForAdvancedFind { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsValidForGrid")]
        public bool? IsValidForGrid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "YomiOf")]
        public string YomiOf { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AttributeOf")]
        public string AttributeOf { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "OptionSet")]
        public MicrosoftDynamicsCRMDependentOptionSetMetadata OptionSet { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Targets")]
        public IList<string> Targets { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsRangeBased")]
        public bool? IsRangeBased { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "MinValue")]
        public double? MinValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "MaxValue")]
        public double? MaxValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Precision")]
        public int? Precision { get; set; }

    }
}
